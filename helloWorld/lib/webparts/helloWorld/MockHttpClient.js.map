{"version":3,"sources":["webparts/helloWorld/MockHttpClient.ts"],"names":[],"mappings":";;AAEA;IAAA;IAYC,CAAA,AAAC;IALe,kBAAG,GAAjB;QACA,MAAM,CAAC,IAAI,OAAO,CAAY,UAAC,OAAO;YAC9B,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IAEV,CAAC;IAViB,qBAAM,GAAc,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,EAAE,GAAG,EAAG,KAAK,EAAC,EAAE,EAAC;QACzC,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,EAAC,EAAE,EAAC;QAC1C,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,GAAG,EAAG,KAAK,EAAC,EAAE,EAAE,CAAC,CAAC;IAQpF,qBAAC;CAZF,AAYC,IAAA;kBAZoB,cAAc","file":"webparts/helloWorld/MockHttpClient.js","sourcesContent":["import { ISPList } from './HelloWorldWebPart';\r\n\r\nexport default class MockHttpClient  {\r\n\r\n   private static _items: ISPList[] = [{ Title: 'Mock List', Id: '1' , value:''},\r\n                                       { Title: 'Mock List 2', Id: '2' ,value:''},  \r\n                                       { Title: 'Mock List 3', Id: '3' , value:'' }];  \r\n\r\n\r\n   public static get(): Promise<ISPList[]> {\r\n   return new Promise<ISPList[]>((resolve) => {\r\n           resolve(MockHttpClient._items);\r\n       });\r\n   \r\n}"],"sourceRoot":"..\\..\\..\\src"}